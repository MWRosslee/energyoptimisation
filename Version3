import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load data from CSV files
inverter_data = pd.read_csv('invertor.csv')
weather_data = pd.read_csv('weather.csv')
forecast_data = pd.read_csv('forecast.csv')

# Combine inverter and weather data based on a common column (e.g., date)
combined_data = pd.merge(inverter_data, weather_data, on='date')

# Extract the relevant features for training the model
features = combined_data[['power_generation', 'battery_level', 'cloud_cover', 'rainfall']]

# Extract the target variable for training the model
target = combined_data['grid_connected']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Create an instance of the linear regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Use the trained model to make predictions on the forecast data
forecast_features = forecast_data[['power_generation', 'battery_level', 'cloud_cover', 'rainfall']]
predictions = model.predict(forecast_features)

# Generate recommendations based on the predictions
for index, prediction in enumerate(predictions):
    if prediction == 1:
        print(f"For date {forecast_data['date'][index]}: It is recommended to charge from the grid.")
    else:
        print(f"For date {forecast_data['date'][index]}: It is recommended to run off battery power or solely run from the grid.")
